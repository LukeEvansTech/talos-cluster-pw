---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: generic-device-plugin
      namespace: kube-system
    - name: volsync
      namespace: storage
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.4.0
            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.downloads,
                sabnzbd.downloads.svc,
                sabnzbd.downloads.svc.cluster,
                sabnzbd.downloads.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN}
            envFrom:
              - secretRef:
                  name: sabnzbd-secret
            probes:
              liveness: &probe
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch
              supplementalGroups: [10000]
              seccompProfile: { type: RuntimeDefault }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 8Gi
        initContainers:
          gluetun:
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.39.1
            env:
              # BLOCK_MALICIOUS: off # save 300MB of RAM; https://github.com/qdm12/gluetun/issues/2054
              DOT: off
              DOT_CACHING: off
              DOT_IPV6: off
              # is absolutely needed if the container is expected to be able to resolve or communicate to any cluster services, without it cluster services cannot be resolved consistently or at all in many setups.
              DNS_KEEP_NAMESERVER: on
              FIREWALL: true
              FIREWALL_DEBUG: on
              FIREWALL_INPUT_PORTS: 80,9999
              FIREWALL_OUTBOUND_SUBNETS: "${CLUSTER_PODS_CIDR},${CLUSTER_SVCS_CIDR},${CR_LAN_CIDR},${GH_LAN_CIDR},${PW_LAN_CIDR}"
              HEALTH_SERVER_ADDRESS: ":9999"
              HEALTH_SERVER_DISABLE_LOOP: on
              HEALTH_VPN_DURATION_INITIAL: 60s
              LOG_LEVEL: debug
              #TODO - Enable when ready - https://github.com/qdm12/gluetun-wiki/blob/main/setup/options/others.md. Getting ""ERROR public ip check settings: API name: API name is not valid: "cloudflare" can only be "ipinfo" or "ip2location""
              # PUBLICIP_API: cloudflare
              # STORAGE_FILEPATH: "" # prevent memory spike and avoid I/O
              TZ: ${TIMEZONE}
              UPDATER_PERIOD: 12h
              VERSION_INFORMATION: off
              VPN_INTERFACE: wg0
              VPN_IPV6_SERVER: off
              VPN_TYPE: wireguard
            envFrom:
              - secret: sabnzbd-secret
            probes:
              liveness:
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 9999
                  timeoutSeconds: 10
                  periodSeconds: 30
                  failureThreshold: 5
              startup:
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 9999
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  failureThreshold: 5
            restartPolicy: Always
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
              allowPrivilegeEscalation: false
            resources:
              limits:
                kernel.org/tun: 1
        pod:
          labels:
            gluetun: "true"

    defaultPodOptions:
      terminationGracePeriodSeconds: 300
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"

    service:
      app:
        controller: sabnzbd
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: SABnzbd
          gethomepage.dev/icon: sabnzbd.png
          gethomepage.dev/description: NZB Download Client
          gethomepage.dev/widget.type: sabnzbd
          gethomepage.dev/widget.url: http://sabnzbd.downloads.svc.cluster.local
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SABNZBD_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
          - host: "{{ .Release.Name }}.${SECRET_INTERNAL_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      empty:
        type: emptyDir
        sizeLimit: 20Mi
        globalMounts:
          - path: /gluetun
            subPath: gluetun
          - path: /tmp
            subPath: tmp
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/log
      run:
        type: emptyDir
        medium: Memory
        sizeLimit: 10Mi
        globalMounts:
          - path: /run
          - path: /var/run
      downloads:
        type: nfs
        server: storage.${SECRET_INTERNAL_DOMAIN}
        path: /mnt/pool/downloads
        globalMounts:
          - path: /downloads
